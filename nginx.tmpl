access_log off;

server {
  listen 4004;
  add_header Content-Type text/plain;
  return 200 "Hello from the other side.";
}

{{ range $containers := groupBy $ "Env.DOCKERCLOUD_SERVICE_HOSTNAME" }}
  {{ $container := index $containers 0 }}

  {{ $service := $container.Env.DOCKERCLOUD_SERVICE_HOSTNAME }}
  {{ $stack := $container.Env.DOCKERCLOUD_STACK_NAME }}
  {{ $domain := replace $.Env.DOMAIN "." "\\." -1 }}

  {{ range $address := $container.Addresses }}
  {{/* Only work with ports that are exposed to the host. */}}
  {{ if $address.HostPort }}
    {{ $upstream := print $service "-" $stack "-"  $address.Port }}

    upstream {{ $upstream }} {
      {{ range $c := $containers }}
        {{ $network := index $c.Networks 0 }}
        server {{ $network.IP }}:{{ $address.Port }};
      {{ end }}
    }
    server {
      server_name ~^({{ $service }}\.)?{{ $stack }}\.{{ $domain }}$;
      listen {{ $address.Port }};
      listen {{ $address.HostPort }};

      location / {
        proxy_pass http://{{ $upstream }};

        {{ if (exists "/etc/nginx/proxy.conf") }}
          include /etc/nginx/proxy.conf;
        {{ else }}
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          proxy_buffering off;
          proxy_set_header Host $http_host;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        {{ end }}
      }
    }
  {{ end }}
  {{ end }}
{{ end }}
